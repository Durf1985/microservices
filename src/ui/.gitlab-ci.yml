---
image: alpine:latest

stages:
  - build
  - test
  - review
  - release

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - build
  variables:
   CI_REGISTRY: "docker.io/"
  only:
    - branches

test:
  stage: test
  script:
    - exit 0
  only:
    - branches

release:
  stage: release
  image: 
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  variables:
    GIT_STRATEGY: fetch
    CI_REGISTRY: "docker.io/"
  script:
    - release
  only:
    - master

review:
  stage: review
  image: fallgeratoor/helm:latest
  script:
    - echo $PATH
    - git clone -b master "$CI_SERVER_URL/$CI_PROJECT_NAMESPACE/reddit-deploy.git"
    - helm dep update reddit-deploy/reddit
    - gcloud auth activate-service-account --key-file="$GCLOUD_CREDENTIALS"
    - deploy
  variables:
    KUBE_NAMESPACE: review
    host: $CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
  environment:
    name: review/$CI_PROJECT_PATH/$CI_COMMIT_REF_NAME
    url: http://$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
    
  only:
    refs:
      - branches
    # kubernetes: active
  except:
    - master

.auto_devops: &auto_devops |
  [[ "$TRACE" ]] && set -x
  export CI_REGISTRY="index.docker.io"
  export CI_APPLICATION_REPOSITORY=$CI_REGISTRY/$CI_PROJECT_PATH
  export CI_APPLICATION_TAG=$CI_COMMIT_REF_SLUG
  export CI_CONTAINER_NAME=ci_job_build_${CI_JOB_ID}
  

  function deploy() {
    track="${1-stable}"
    name="$CI_ENVIRONMENT_SLUG"

    if [[ "$track" != "stable" ]]; then
      name="$name-$track"
    fi

    echo "Deploy helm release $name to $KUBE_NAMESPACE"
    helm upgrade --install \
      --wait \
      --set ui.ingress.host="$host" \
      --set $CI_PROJECT_NAME.image.tag=$CI_APPLICATION_TAG \
      --create-namespace \
      --namespace="$KUBE_NAMESPACE" \
      --version="$CI_PIPELINE_ID-$CI_JOB_ID" \
      "$name" \
      reddit-deploy/reddit/
  }

  

 
 

  function release() {
    crane auth login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    crane tag "${CI_APPLICATION_REPOSITORY}":"${CI_APPLICATION_TAG}" "$(cat VERSION)"
  }

  function build() {

    echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n "$CI_REGISTRY_USER":"$CI_REGISTRY_PASSWORD" | base64)\"}}}" > /kaniko/.docker/config.json 
    /kaniko/executor \
     --context "${CI_PROJECT_DIR}" \
     --dockerfile "${CI_PROJECT_DIR}/Dockerfile" \
     --destination "${CI_APPLICATION_REPOSITORY}:${CI_APPLICATION_TAG}"  
  }
 

before_script:
  - *auto_devops
...
